name: release

on:
  push:
    branches: [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test-and-pre-release:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.18.0'
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        run: go test ./...
      - name: Determine release
        uses: go-semantic-release/action@v1
        id: semrel
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          changelog-generator-opt: "emojis=true"
          dry: true
          changelog-file: changelog.txt
      - name: Determine release notes hash
        run: echo "release-hash=changelog-${{ hashFiles('changelog.txt') }}" >> $GITHUB_ENV
      - name: Cache release notes
        uses: actions/cache@v3
        id: cache-release-notes
        with:
          path: changelog.txt
          key: ${{ env.release-hash }}
    outputs:
      version: ${{ steps.semrel.outputs.version }}
      release-notes-cache-key: ${{ env.release-hash }}
  release-docker:
    needs: test-and-pre-release
    if: needs.test-and-pre-release.outputs.version != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Load release notes
        uses: actions/cache@v3
        id: cache-release-notes
        with:
          path: changelog.txt
          key: ${{ needs.test-and-pre-release.outputs.release-notes-cache-key }}
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Docker push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          build-args: VERSION=v${{ needs.test-and-pre-release.outputs.version }}
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/websrv:${{ needs.test-and-pre-release.outputs.version }}
            ${{ secrets.DOCKERHUB_USERNAME }}/websrv:latest
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.test-and-pre-release.outputs.version }}
          body_path: changelog.txt
  release-binary:
    needs: test-and-pre-release
    if: needs.test-and-pre-release.outputs.version != ''
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos:
          - 'darwin'
          - 'linux'
          - 'windows'
        goarch:
          - 'amd64'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Load release notes
        uses: actions/cache@v3
        id: cache-release-notes
        with:
          path: changelog.txt
          key: ${{ needs.test-and-pre-release.outputs.release-notes-cache-key }}
      - name: Get OS and arch info
        run: |
          GOOS=${{matrix.goos}}
          GOARCH=${{matrix.goarch}}
          BINARY_NAME=websrv-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.18.0'
      - name: Build
        run: |
          CGO_ENABLED=0 go build -a -ldflags "-s -w -X 'main.version=v${{ needs.test-and-pre-release.outputs.version }}'" -o "$BINARY_NAME"
      - name: Release with Notes
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.test-and-pre-release.outputs.version }}
          body_path: changelog.txt
          files: ${{env.BINARY_NAME}}
